# Adapted from:
# - https://github.com/love-actions/love-actions-windows/blob/main/action.yml
name: Build Windows
description: Creates Windows builds
inputs:
  build_num:
    description: Build number
    required: true
  build_type:
    description: Build type (release/debug)
    required: true
  love_version:
    description: LÃ–VE version to use
    required: true
  product_company:
    description: Product company
    required: true
  product_copyright:
    description: Product copyright
    required: true
  product_desc:
    description: Product description
    required: true
  product_name:
    description: Product name
    required: true
  product_version:
    description: Product version
    required: true
  output_folder:
    description: Output folder path
    required: true
  target_windows_zip:
    description: Create Windows ZIP files
    required: true
  target_windows_sfx:
    description: Create Windows SFX installer
    required: false
    default: 'true'
runs:
  using: composite
  steps:
    - name: Install WineHQ
      shell: bash
      run: |
        # Install WineHQ
        sudo dpkg --add-architecture i386
        sudo mkdir -pm755 /etc/apt/keyrings
        sudo wget -O /etc/apt/keyrings/winehq-archive.key https://dl.winehq.org/wine-builds/winehq.key
        sudo wget -NP /etc/apt/sources.list.d/ https://dl.winehq.org/wine-builds/ubuntu/dists/jammy/winehq-jammy.sources
        sudo apt-get -y update
        sudo apt-get -y --no-install-recommends install winehq-stable
    - name: Download Windows tools
      shell: bash
      run: |
        for ARCH in win32 win64; do
          [ "$ARCH" == "win32" ] && SHORT_ARCH="x86" || SHORT_ARCH="x64"
          curl -fsSL --retry 5 --retry-delay 15 --connect-timeout 30 --max-time 300 https://github.com/electron/rcedit/releases/download/v2.0.0/rcedit-${SHORT_ARCH}.exe -o ./tools/rcedit-${ARCH}.exe || exit 1
          curl -fsSL --retry 5 --retry-delay 15 --connect-timeout 30 --max-time 300 https://github.com/love2d/love/releases/download/${{ inputs.love_version }}/love-${{ inputs.love_version }}-${ARCH}.zip -o ./tools/love-${{ inputs.love_version }}-${ARCH}.zip || exit 1
          7z x -o./tools/ ./tools/love-${{ inputs.love_version }}-${ARCH}.zip
          rm ./tools/love-${{ inputs.love_version }}-${ARCH}.zip
          mv ./tools/love-${{ inputs.love_version }}-${ARCH} ./tools/love-${ARCH}
          rm ./tools/love-${ARCH}/lovec.exe
          rm ./tools/love-${ARCH}/game.ico
          rm ./tools/love-${ARCH}/love.ico
          rm ./tools/love-${ARCH}/changes.txt
          rm ./tools/love-${ARCH}/readme.txt
        done
        curl -fsSL --retry 5 --retry-delay 15 --connect-timeout 30 --max-time 300 https://www.7-zip.org/a/lzma2409.7z -o ./tools/lzma-sdk.7z || exit 1
        mkdir -p ./tools/lzma-sdk
        7z x -o./tools/lzma-sdk/ ./tools/lzma-sdk.7z
    - name: Create .ico icon
      shell: bash
      run: convert ./resources/icon.png -define icon:auto-resize="256,128,96,64,48,32,24,16" "${{ inputs.output_folder }}/icon.ico"
    - name: Resource patch love.exe
      env:
        BUILD_NUM: ${{ inputs.build_num }}
        DISPLAY: ":99"     # Virtual display for headless operation
        WINEDEBUG: "-all"  # Disable WINE debug output
      shell: bash
      run: |
        # Remove the default icon and version info then add the new icon and version info
        for ARCH in win32 win64; do
          env WINEARCH=${ARCH} WINEPREFIX="$HOME/.wine-${ARCH}" wineboot --init
          env WINEARCH=${ARCH} WINEPREFIX="$HOME/.wine-${ARCH}" wine ./tools/rcedit-${ARCH}.exe \
            ./tools/love-${ARCH}/love.exe \
            --set-version-string CompanyName "${{ inputs.product_company }}" \
            --set-version-string ProductName "${{ inputs.product_name }}" \
            --set-version-string FileDescription "${{ inputs.product_desc }}" \
            --set-version-string InternalName "${{ inputs.product_name }}" \
            --set-version-string LegalCopyright "${{ inputs.product_copyright }}" \
            --set-version-string OriginalFilename "${{ inputs.product_name }}.exe" \
            --set-version-string PrivateBuild "${{ inputs.build_num }}" \
            --set-file-version "${{ inputs.build_num }}" \
            --set-product-version "${{ inputs.product_version }}" \
            --set-icon "${{ inputs.output_folder }}/icon.ico"
        done
    - name: Create fused executables
      shell: bash
      run: |
        for ARCH in win32 win64; do
          mkdir -p ./tools/build/$ARCH/
          cp ./tools/love-$ARCH/* ./tools/build/$ARCH/
          mv -v ./tools/build/$ARCH/love.exe ./tools/build/$ARCH/${{ inputs.product_name }}.exe
          dd if=${{ inputs.output_folder }}/${{ inputs.product_name }}.love of=./tools/build/$ARCH/${{ inputs.product_name }}.exe obs=1M oflag=append conv=notrunc
          if [ -d ./resources/windows/$ARCH ]; then
            cp -r -f ./resources/windows/$ARCH ./tools/build/$ARCH/
          fi
        done
    - name: Create Windows .zip files
      if: ${{ inputs.build_type == 'release' && inputs.target_windows_zip == 'true' }}
      shell: bash
      run: |
        for ARCH in win32 win64; do
          7z a -tzip -mx=9 -mfb=273 -mpass=15 -mtc=off ${{ inputs.output_folder }}/${{ inputs.product_name }}-${{ inputs.build_num }}_$ARCH.zip ./tools/build/$ARCH/*
        done
    - name: Create Windows SFX file
      if: ${{ inputs.target_windows_sfx == 'true' }}
      env:
        BUILD_NUM: ${{ inputs.build_num }}
        DISPLAY: ":99"     # Virtual display for headless operation
        WINEDEBUG: "-all"  # Disable WINE debug output
      shell: bash
      run: |
        SFX_EXE="${{ inputs.output_folder }}/${{ inputs.product_name }}-${{ inputs.build_num }}.exe"
        # Create 7z archive of the game
        mkdir -p ./tools/build/sfx
        7z a -mx=5 -m0=BCJ -m1=LZMA2 ./tools/build/sfx/${{ inputs.product_name }}.7z ./tools/build/win64/*

        # Create SFX configuration
        cat > ./tools/config.txt << EOF
        ;!@Install@!UTF-8!
        Title="${{ inputs.product_name}}"
        Progress="no"
        RunProgram="${{ inputs.product_name }}.exe"
        ;!@InstallEnd@!
        EOF

        # Concatenate the SFX module, config and 7z archive
        cp -v ./tools/lzma-sdk/bin/7zSD.sfx "${SFX_EXE}"
        dd if=./tools/config.txt of="${SFX_EXE}" bs=1M oflag=append conv=notrunc
        dd if=./tools/build/sfx/${{ inputs.product_name }}.7z of="${SFX_EXE}" bs=1M oflag=append conv=notrunc

        env WINEARCH=win64 WINEPREFIX="$HOME/.wine-win64" wine ./tools/rcedit-win64.exe \
          "${SFX_EXE}" \
          --set-version-string CompanyName "${{ inputs.product_company }}" \
          --set-version-string ProductName "${{ inputs.product_name }}" \
          --set-version-string FileDescription "${{ inputs.product_desc }}" \
          --set-version-string InternalName "${{ inputs.product_name }}" \
          --set-version-string LegalCopyright "${{ inputs.product_copyright }}" \
          --set-version-string OriginalFilename "${{ inputs.product_name }}.exe" \
          --set-version-string PrivateBuild "${{ inputs.build_num }}" \
          --set-file-version "${{ inputs.build_num }}" \
          --set-product-version "${{ inputs.product_version }}" \
          --set-icon "${{ inputs.output_folder }}/icon.ico"
